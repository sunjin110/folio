/*
folio

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ArticleTagsGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArticleTagsGet200Response{}

// ArticleTagsGet200Response struct for ArticleTagsGet200Response
type ArticleTagsGet200Response struct {
	Tags []ArticleTag `json:"tags"`
}

type _ArticleTagsGet200Response ArticleTagsGet200Response

// NewArticleTagsGet200Response instantiates a new ArticleTagsGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArticleTagsGet200Response(tags []ArticleTag) *ArticleTagsGet200Response {
	this := ArticleTagsGet200Response{}
	this.Tags = tags
	return &this
}

// NewArticleTagsGet200ResponseWithDefaults instantiates a new ArticleTagsGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArticleTagsGet200ResponseWithDefaults() *ArticleTagsGet200Response {
	this := ArticleTagsGet200Response{}
	return &this
}

// GetTags returns the Tags field value
func (o *ArticleTagsGet200Response) GetTags() []ArticleTag {
	if o == nil {
		var ret []ArticleTag
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *ArticleTagsGet200Response) GetTagsOk() ([]ArticleTag, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags, true
}

// SetTags sets field value
func (o *ArticleTagsGet200Response) SetTags(v []ArticleTag) {
	o.Tags = v
}

func (o ArticleTagsGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArticleTagsGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tags"] = o.Tags
	return toSerialize, nil
}

func (o *ArticleTagsGet200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tags",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varArticleTagsGet200Response := _ArticleTagsGet200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varArticleTagsGet200Response)

	if err != nil {
		return err
	}

	*o = ArticleTagsGet200Response(varArticleTagsGet200Response)

	return err
}

type NullableArticleTagsGet200Response struct {
	value *ArticleTagsGet200Response
	isSet bool
}

func (v NullableArticleTagsGet200Response) Get() *ArticleTagsGet200Response {
	return v.value
}

func (v *NullableArticleTagsGet200Response) Set(val *ArticleTagsGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableArticleTagsGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableArticleTagsGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArticleTagsGet200Response(val *ArticleTagsGet200Response) *NullableArticleTagsGet200Response {
	return &NullableArticleTagsGet200Response{value: val, isSet: true}
}

func (v NullableArticleTagsGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArticleTagsGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


