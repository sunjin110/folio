/*
folio

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the ArticlesArticleIdGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArticlesArticleIdGet200Response{}

// ArticlesArticleIdGet200Response struct for ArticlesArticleIdGet200Response
type ArticlesArticleIdGet200Response struct {
	Id string `json:"id"`
	Title string `json:"title"`
	Body string `json:"body"`
	CreatedAt time.Time `json:"created_at"`
	UserId string `json:"user_id"`
	Tags []ArticleTag `json:"tags"`
}

type _ArticlesArticleIdGet200Response ArticlesArticleIdGet200Response

// NewArticlesArticleIdGet200Response instantiates a new ArticlesArticleIdGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArticlesArticleIdGet200Response(id string, title string, body string, createdAt time.Time, userId string, tags []ArticleTag) *ArticlesArticleIdGet200Response {
	this := ArticlesArticleIdGet200Response{}
	this.Id = id
	this.Title = title
	this.Body = body
	this.CreatedAt = createdAt
	this.UserId = userId
	this.Tags = tags
	return &this
}

// NewArticlesArticleIdGet200ResponseWithDefaults instantiates a new ArticlesArticleIdGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArticlesArticleIdGet200ResponseWithDefaults() *ArticlesArticleIdGet200Response {
	this := ArticlesArticleIdGet200Response{}
	return &this
}

// GetId returns the Id field value
func (o *ArticlesArticleIdGet200Response) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ArticlesArticleIdGet200Response) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ArticlesArticleIdGet200Response) SetId(v string) {
	o.Id = v
}

// GetTitle returns the Title field value
func (o *ArticlesArticleIdGet200Response) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ArticlesArticleIdGet200Response) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ArticlesArticleIdGet200Response) SetTitle(v string) {
	o.Title = v
}

// GetBody returns the Body field value
func (o *ArticlesArticleIdGet200Response) GetBody() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Body
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
func (o *ArticlesArticleIdGet200Response) GetBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Body, true
}

// SetBody sets field value
func (o *ArticlesArticleIdGet200Response) SetBody(v string) {
	o.Body = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ArticlesArticleIdGet200Response) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ArticlesArticleIdGet200Response) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ArticlesArticleIdGet200Response) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUserId returns the UserId field value
func (o *ArticlesArticleIdGet200Response) GetUserId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserId
}

// GetUserIdOk returns a tuple with the UserId field value
// and a boolean to check if the value has been set.
func (o *ArticlesArticleIdGet200Response) GetUserIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserId, true
}

// SetUserId sets field value
func (o *ArticlesArticleIdGet200Response) SetUserId(v string) {
	o.UserId = v
}

// GetTags returns the Tags field value
func (o *ArticlesArticleIdGet200Response) GetTags() []ArticleTag {
	if o == nil {
		var ret []ArticleTag
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *ArticlesArticleIdGet200Response) GetTagsOk() ([]ArticleTag, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags, true
}

// SetTags sets field value
func (o *ArticlesArticleIdGet200Response) SetTags(v []ArticleTag) {
	o.Tags = v
}

func (o ArticlesArticleIdGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArticlesArticleIdGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["title"] = o.Title
	toSerialize["body"] = o.Body
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["user_id"] = o.UserId
	toSerialize["tags"] = o.Tags
	return toSerialize, nil
}

func (o *ArticlesArticleIdGet200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"title",
		"body",
		"created_at",
		"user_id",
		"tags",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varArticlesArticleIdGet200Response := _ArticlesArticleIdGet200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varArticlesArticleIdGet200Response)

	if err != nil {
		return err
	}

	*o = ArticlesArticleIdGet200Response(varArticlesArticleIdGet200Response)

	return err
}

type NullableArticlesArticleIdGet200Response struct {
	value *ArticlesArticleIdGet200Response
	isSet bool
}

func (v NullableArticlesArticleIdGet200Response) Get() *ArticlesArticleIdGet200Response {
	return v.value
}

func (v *NullableArticlesArticleIdGet200Response) Set(val *ArticlesArticleIdGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableArticlesArticleIdGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableArticlesArticleIdGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArticlesArticleIdGet200Response(val *ArticlesArticleIdGet200Response) *NullableArticlesArticleIdGet200Response {
	return &NullableArticlesArticleIdGet200Response{value: val, isSet: true}
}

func (v NullableArticlesArticleIdGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArticlesArticleIdGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


