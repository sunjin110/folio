/*
folio

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ArticlesPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArticlesPostRequest{}

// ArticlesPostRequest struct for ArticlesPostRequest
type ArticlesPostRequest struct {
	Title string `json:"title"`
	Body string `json:"body"`
	TagIds []string `json:"tag_ids"`
}

type _ArticlesPostRequest ArticlesPostRequest

// NewArticlesPostRequest instantiates a new ArticlesPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArticlesPostRequest(title string, body string, tagIds []string) *ArticlesPostRequest {
	this := ArticlesPostRequest{}
	this.Title = title
	this.Body = body
	this.TagIds = tagIds
	return &this
}

// NewArticlesPostRequestWithDefaults instantiates a new ArticlesPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArticlesPostRequestWithDefaults() *ArticlesPostRequest {
	this := ArticlesPostRequest{}
	return &this
}

// GetTitle returns the Title field value
func (o *ArticlesPostRequest) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ArticlesPostRequest) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ArticlesPostRequest) SetTitle(v string) {
	o.Title = v
}

// GetBody returns the Body field value
func (o *ArticlesPostRequest) GetBody() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Body
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
func (o *ArticlesPostRequest) GetBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Body, true
}

// SetBody sets field value
func (o *ArticlesPostRequest) SetBody(v string) {
	o.Body = v
}

// GetTagIds returns the TagIds field value
func (o *ArticlesPostRequest) GetTagIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.TagIds
}

// GetTagIdsOk returns a tuple with the TagIds field value
// and a boolean to check if the value has been set.
func (o *ArticlesPostRequest) GetTagIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TagIds, true
}

// SetTagIds sets field value
func (o *ArticlesPostRequest) SetTagIds(v []string) {
	o.TagIds = v
}

func (o ArticlesPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArticlesPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["title"] = o.Title
	toSerialize["body"] = o.Body
	toSerialize["tag_ids"] = o.TagIds
	return toSerialize, nil
}

func (o *ArticlesPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"title",
		"body",
		"tag_ids",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varArticlesPostRequest := _ArticlesPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varArticlesPostRequest)

	if err != nil {
		return err
	}

	*o = ArticlesPostRequest(varArticlesPostRequest)

	return err
}

type NullableArticlesPostRequest struct {
	value *ArticlesPostRequest
	isSet bool
}

func (v NullableArticlesPostRequest) Get() *ArticlesPostRequest {
	return v.value
}

func (v *NullableArticlesPostRequest) Set(val *ArticlesPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableArticlesPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableArticlesPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArticlesPostRequest(val *ArticlesPostRequest) *NullableArticlesPostRequest {
	return &NullableArticlesPostRequest{value: val, isSet: true}
}

func (v NullableArticlesPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArticlesPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


