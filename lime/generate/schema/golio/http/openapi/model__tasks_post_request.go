/*
folio

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the TasksPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TasksPostRequest{}

// TasksPostRequest struct for TasksPostRequest
type TasksPostRequest struct {
	Title string `json:"title"`
	Detail string `json:"detail"`
	StartTime NullableTime `json:"start_time,omitempty"`
	DueTime NullableTime `json:"due_time,omitempty"`
}

type _TasksPostRequest TasksPostRequest

// NewTasksPostRequest instantiates a new TasksPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTasksPostRequest(title string, detail string) *TasksPostRequest {
	this := TasksPostRequest{}
	this.Title = title
	this.Detail = detail
	return &this
}

// NewTasksPostRequestWithDefaults instantiates a new TasksPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTasksPostRequestWithDefaults() *TasksPostRequest {
	this := TasksPostRequest{}
	return &this
}

// GetTitle returns the Title field value
func (o *TasksPostRequest) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *TasksPostRequest) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *TasksPostRequest) SetTitle(v string) {
	o.Title = v
}

// GetDetail returns the Detail field value
func (o *TasksPostRequest) GetDetail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Detail
}

// GetDetailOk returns a tuple with the Detail field value
// and a boolean to check if the value has been set.
func (o *TasksPostRequest) GetDetailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Detail, true
}

// SetDetail sets field value
func (o *TasksPostRequest) SetDetail(v string) {
	o.Detail = v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TasksPostRequest) GetStartTime() time.Time {
	if o == nil || IsNil(o.StartTime.Get()) {
		var ret time.Time
		return ret
	}
	return *o.StartTime.Get()
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TasksPostRequest) GetStartTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartTime.Get(), o.StartTime.IsSet()
}

// HasStartTime returns a boolean if a field has been set.
func (o *TasksPostRequest) HasStartTime() bool {
	if o != nil && o.StartTime.IsSet() {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given NullableTime and assigns it to the StartTime field.
func (o *TasksPostRequest) SetStartTime(v time.Time) {
	o.StartTime.Set(&v)
}
// SetStartTimeNil sets the value for StartTime to be an explicit nil
func (o *TasksPostRequest) SetStartTimeNil() {
	o.StartTime.Set(nil)
}

// UnsetStartTime ensures that no value is present for StartTime, not even an explicit nil
func (o *TasksPostRequest) UnsetStartTime() {
	o.StartTime.Unset()
}

// GetDueTime returns the DueTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TasksPostRequest) GetDueTime() time.Time {
	if o == nil || IsNil(o.DueTime.Get()) {
		var ret time.Time
		return ret
	}
	return *o.DueTime.Get()
}

// GetDueTimeOk returns a tuple with the DueTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TasksPostRequest) GetDueTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.DueTime.Get(), o.DueTime.IsSet()
}

// HasDueTime returns a boolean if a field has been set.
func (o *TasksPostRequest) HasDueTime() bool {
	if o != nil && o.DueTime.IsSet() {
		return true
	}

	return false
}

// SetDueTime gets a reference to the given NullableTime and assigns it to the DueTime field.
func (o *TasksPostRequest) SetDueTime(v time.Time) {
	o.DueTime.Set(&v)
}
// SetDueTimeNil sets the value for DueTime to be an explicit nil
func (o *TasksPostRequest) SetDueTimeNil() {
	o.DueTime.Set(nil)
}

// UnsetDueTime ensures that no value is present for DueTime, not even an explicit nil
func (o *TasksPostRequest) UnsetDueTime() {
	o.DueTime.Unset()
}

func (o TasksPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TasksPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["title"] = o.Title
	toSerialize["detail"] = o.Detail
	if o.StartTime.IsSet() {
		toSerialize["start_time"] = o.StartTime.Get()
	}
	if o.DueTime.IsSet() {
		toSerialize["due_time"] = o.DueTime.Get()
	}
	return toSerialize, nil
}

func (o *TasksPostRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"title",
		"detail",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTasksPostRequest := _TasksPostRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTasksPostRequest)

	if err != nil {
		return err
	}

	*o = TasksPostRequest(varTasksPostRequest)

	return err
}

type NullableTasksPostRequest struct {
	value *TasksPostRequest
	isSet bool
}

func (v NullableTasksPostRequest) Get() *TasksPostRequest {
	return v.value
}

func (v *NullableTasksPostRequest) Set(val *TasksPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTasksPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTasksPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTasksPostRequest(val *TasksPostRequest) *NullableTasksPostRequest {
	return &NullableTasksPostRequest{value: val, isSet: true}
}

func (v NullableTasksPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTasksPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


