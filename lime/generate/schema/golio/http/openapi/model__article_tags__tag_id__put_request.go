/*
folio

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ArticleTagsTagIdPutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArticleTagsTagIdPutRequest{}

// ArticleTagsTagIdPutRequest struct for ArticleTagsTagIdPutRequest
type ArticleTagsTagIdPutRequest struct {
	Name string `json:"name"`
}

type _ArticleTagsTagIdPutRequest ArticleTagsTagIdPutRequest

// NewArticleTagsTagIdPutRequest instantiates a new ArticleTagsTagIdPutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArticleTagsTagIdPutRequest(name string) *ArticleTagsTagIdPutRequest {
	this := ArticleTagsTagIdPutRequest{}
	this.Name = name
	return &this
}

// NewArticleTagsTagIdPutRequestWithDefaults instantiates a new ArticleTagsTagIdPutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArticleTagsTagIdPutRequestWithDefaults() *ArticleTagsTagIdPutRequest {
	this := ArticleTagsTagIdPutRequest{}
	return &this
}

// GetName returns the Name field value
func (o *ArticleTagsTagIdPutRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ArticleTagsTagIdPutRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ArticleTagsTagIdPutRequest) SetName(v string) {
	o.Name = v
}

func (o ArticleTagsTagIdPutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArticleTagsTagIdPutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

func (o *ArticleTagsTagIdPutRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varArticleTagsTagIdPutRequest := _ArticleTagsTagIdPutRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varArticleTagsTagIdPutRequest)

	if err != nil {
		return err
	}

	*o = ArticleTagsTagIdPutRequest(varArticleTagsTagIdPutRequest)

	return err
}

type NullableArticleTagsTagIdPutRequest struct {
	value *ArticleTagsTagIdPutRequest
	isSet bool
}

func (v NullableArticleTagsTagIdPutRequest) Get() *ArticleTagsTagIdPutRequest {
	return v.value
}

func (v *NullableArticleTagsTagIdPutRequest) Set(val *ArticleTagsTagIdPutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableArticleTagsTagIdPutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableArticleTagsTagIdPutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArticleTagsTagIdPutRequest(val *ArticleTagsTagIdPutRequest) *NullableArticleTagsTagIdPutRequest {
	return &NullableArticleTagsTagIdPutRequest{value: val, isSet: true}
}

func (v NullableArticleTagsTagIdPutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArticleTagsTagIdPutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


