/*
folio

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ArticlesGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ArticlesGet200Response{}

// ArticlesGet200Response struct for ArticlesGet200Response
type ArticlesGet200Response struct {
	Articles []Article `json:"articles"`
	Total int32 `json:"total"`
}

type _ArticlesGet200Response ArticlesGet200Response

// NewArticlesGet200Response instantiates a new ArticlesGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArticlesGet200Response(articles []Article, total int32) *ArticlesGet200Response {
	this := ArticlesGet200Response{}
	this.Articles = articles
	this.Total = total
	return &this
}

// NewArticlesGet200ResponseWithDefaults instantiates a new ArticlesGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArticlesGet200ResponseWithDefaults() *ArticlesGet200Response {
	this := ArticlesGet200Response{}
	return &this
}

// GetArticles returns the Articles field value
func (o *ArticlesGet200Response) GetArticles() []Article {
	if o == nil {
		var ret []Article
		return ret
	}

	return o.Articles
}

// GetArticlesOk returns a tuple with the Articles field value
// and a boolean to check if the value has been set.
func (o *ArticlesGet200Response) GetArticlesOk() ([]Article, bool) {
	if o == nil {
		return nil, false
	}
	return o.Articles, true
}

// SetArticles sets field value
func (o *ArticlesGet200Response) SetArticles(v []Article) {
	o.Articles = v
}

// GetTotal returns the Total field value
func (o *ArticlesGet200Response) GetTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *ArticlesGet200Response) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *ArticlesGet200Response) SetTotal(v int32) {
	o.Total = v
}

func (o ArticlesGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ArticlesGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["articles"] = o.Articles
	toSerialize["total"] = o.Total
	return toSerialize, nil
}

func (o *ArticlesGet200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"articles",
		"total",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varArticlesGet200Response := _ArticlesGet200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varArticlesGet200Response)

	if err != nil {
		return err
	}

	*o = ArticlesGet200Response(varArticlesGet200Response)

	return err
}

type NullableArticlesGet200Response struct {
	value *ArticlesGet200Response
	isSet bool
}

func (v NullableArticlesGet200Response) Get() *ArticlesGet200Response {
	return v.value
}

func (v *NullableArticlesGet200Response) Set(val *ArticlesGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableArticlesGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableArticlesGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArticlesGet200Response(val *ArticlesGet200Response) *NullableArticlesGet200Response {
	return &NullableArticlesGet200Response{value: val, isSet: true}
}

func (v NullableArticlesGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArticlesGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


