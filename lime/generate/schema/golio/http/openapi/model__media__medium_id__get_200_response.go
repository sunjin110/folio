/*
folio

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MediaMediumIdGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MediaMediumIdGet200Response{}

// MediaMediumIdGet200Response struct for MediaMediumIdGet200Response
type MediaMediumIdGet200Response struct {
	MediumId string `json:"medium_id"`
	ThumbnailUrl string `json:"thumbnail_url"`
	DownloadUrl string `json:"download_url"`
	FileType string `json:"file_type"`
}

type _MediaMediumIdGet200Response MediaMediumIdGet200Response

// NewMediaMediumIdGet200Response instantiates a new MediaMediumIdGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMediaMediumIdGet200Response(mediumId string, thumbnailUrl string, downloadUrl string, fileType string) *MediaMediumIdGet200Response {
	this := MediaMediumIdGet200Response{}
	this.MediumId = mediumId
	this.ThumbnailUrl = thumbnailUrl
	this.DownloadUrl = downloadUrl
	this.FileType = fileType
	return &this
}

// NewMediaMediumIdGet200ResponseWithDefaults instantiates a new MediaMediumIdGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaMediumIdGet200ResponseWithDefaults() *MediaMediumIdGet200Response {
	this := MediaMediumIdGet200Response{}
	return &this
}

// GetMediumId returns the MediumId field value
func (o *MediaMediumIdGet200Response) GetMediumId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MediumId
}

// GetMediumIdOk returns a tuple with the MediumId field value
// and a boolean to check if the value has been set.
func (o *MediaMediumIdGet200Response) GetMediumIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MediumId, true
}

// SetMediumId sets field value
func (o *MediaMediumIdGet200Response) SetMediumId(v string) {
	o.MediumId = v
}

// GetThumbnailUrl returns the ThumbnailUrl field value
func (o *MediaMediumIdGet200Response) GetThumbnailUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ThumbnailUrl
}

// GetThumbnailUrlOk returns a tuple with the ThumbnailUrl field value
// and a boolean to check if the value has been set.
func (o *MediaMediumIdGet200Response) GetThumbnailUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ThumbnailUrl, true
}

// SetThumbnailUrl sets field value
func (o *MediaMediumIdGet200Response) SetThumbnailUrl(v string) {
	o.ThumbnailUrl = v
}

// GetDownloadUrl returns the DownloadUrl field value
func (o *MediaMediumIdGet200Response) GetDownloadUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DownloadUrl
}

// GetDownloadUrlOk returns a tuple with the DownloadUrl field value
// and a boolean to check if the value has been set.
func (o *MediaMediumIdGet200Response) GetDownloadUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DownloadUrl, true
}

// SetDownloadUrl sets field value
func (o *MediaMediumIdGet200Response) SetDownloadUrl(v string) {
	o.DownloadUrl = v
}

// GetFileType returns the FileType field value
func (o *MediaMediumIdGet200Response) GetFileType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileType
}

// GetFileTypeOk returns a tuple with the FileType field value
// and a boolean to check if the value has been set.
func (o *MediaMediumIdGet200Response) GetFileTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileType, true
}

// SetFileType sets field value
func (o *MediaMediumIdGet200Response) SetFileType(v string) {
	o.FileType = v
}

func (o MediaMediumIdGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MediaMediumIdGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["medium_id"] = o.MediumId
	toSerialize["thumbnail_url"] = o.ThumbnailUrl
	toSerialize["download_url"] = o.DownloadUrl
	toSerialize["file_type"] = o.FileType
	return toSerialize, nil
}

func (o *MediaMediumIdGet200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"medium_id",
		"thumbnail_url",
		"download_url",
		"file_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMediaMediumIdGet200Response := _MediaMediumIdGet200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMediaMediumIdGet200Response)

	if err != nil {
		return err
	}

	*o = MediaMediumIdGet200Response(varMediaMediumIdGet200Response)

	return err
}

type NullableMediaMediumIdGet200Response struct {
	value *MediaMediumIdGet200Response
	isSet bool
}

func (v NullableMediaMediumIdGet200Response) Get() *MediaMediumIdGet200Response {
	return v.value
}

func (v *NullableMediaMediumIdGet200Response) Set(val *MediaMediumIdGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaMediumIdGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaMediumIdGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaMediumIdGet200Response(val *MediaMediumIdGet200Response) *NullableMediaMediumIdGet200Response {
	return &NullableMediaMediumIdGet200Response{value: val, isSet: true}
}

func (v NullableMediaMediumIdGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaMediumIdGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


