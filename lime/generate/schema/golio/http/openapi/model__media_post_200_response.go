/*
folio

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MediaPost200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MediaPost200Response{}

// MediaPost200Response struct for MediaPost200Response
type MediaPost200Response struct {
	UploadPresignedUrl string `json:"upload_presigned_url"`
}

type _MediaPost200Response MediaPost200Response

// NewMediaPost200Response instantiates a new MediaPost200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMediaPost200Response(uploadPresignedUrl string) *MediaPost200Response {
	this := MediaPost200Response{}
	this.UploadPresignedUrl = uploadPresignedUrl
	return &this
}

// NewMediaPost200ResponseWithDefaults instantiates a new MediaPost200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaPost200ResponseWithDefaults() *MediaPost200Response {
	this := MediaPost200Response{}
	return &this
}

// GetUploadPresignedUrl returns the UploadPresignedUrl field value
func (o *MediaPost200Response) GetUploadPresignedUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UploadPresignedUrl
}

// GetUploadPresignedUrlOk returns a tuple with the UploadPresignedUrl field value
// and a boolean to check if the value has been set.
func (o *MediaPost200Response) GetUploadPresignedUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UploadPresignedUrl, true
}

// SetUploadPresignedUrl sets field value
func (o *MediaPost200Response) SetUploadPresignedUrl(v string) {
	o.UploadPresignedUrl = v
}

func (o MediaPost200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MediaPost200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["upload_presigned_url"] = o.UploadPresignedUrl
	return toSerialize, nil
}

func (o *MediaPost200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"upload_presigned_url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMediaPost200Response := _MediaPost200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMediaPost200Response)

	if err != nil {
		return err
	}

	*o = MediaPost200Response(varMediaPost200Response)

	return err
}

type NullableMediaPost200Response struct {
	value *MediaPost200Response
	isSet bool
}

func (v NullableMediaPost200Response) Get() *MediaPost200Response {
	return v.value
}

func (v *NullableMediaPost200Response) Set(val *MediaPost200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaPost200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaPost200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaPost200Response(val *MediaPost200Response) *NullableMediaPost200Response {
	return &NullableMediaPost200Response{value: val, isSet: true}
}

func (v NullableMediaPost200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaPost200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


