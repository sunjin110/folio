/*
folio

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the HelloGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HelloGet200Response{}

// HelloGet200Response struct for HelloGet200Response
type HelloGet200Response struct {
	Hello string `json:"hello"`
}

type _HelloGet200Response HelloGet200Response

// NewHelloGet200Response instantiates a new HelloGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHelloGet200Response(hello string) *HelloGet200Response {
	this := HelloGet200Response{}
	this.Hello = hello
	return &this
}

// NewHelloGet200ResponseWithDefaults instantiates a new HelloGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHelloGet200ResponseWithDefaults() *HelloGet200Response {
	this := HelloGet200Response{}
	return &this
}

// GetHello returns the Hello field value
func (o *HelloGet200Response) GetHello() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hello
}

// GetHelloOk returns a tuple with the Hello field value
// and a boolean to check if the value has been set.
func (o *HelloGet200Response) GetHelloOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hello, true
}

// SetHello sets field value
func (o *HelloGet200Response) SetHello(v string) {
	o.Hello = v
}

func (o HelloGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HelloGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["hello"] = o.Hello
	return toSerialize, nil
}

func (o *HelloGet200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"hello",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varHelloGet200Response := _HelloGet200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varHelloGet200Response)

	if err != nil {
		return err
	}

	*o = HelloGet200Response(varHelloGet200Response)

	return err
}

type NullableHelloGet200Response struct {
	value *HelloGet200Response
	isSet bool
}

func (v NullableHelloGet200Response) Get() *HelloGet200Response {
	return v.value
}

func (v *NullableHelloGet200Response) Set(val *HelloGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableHelloGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableHelloGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHelloGet200Response(val *HelloGet200Response) *NullableHelloGet200Response {
	return &NullableHelloGet200Response{value: val, isSet: true}
}

func (v NullableHelloGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHelloGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


