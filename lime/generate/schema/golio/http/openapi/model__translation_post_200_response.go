/*
folio

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the TranslationPost200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TranslationPost200Response{}

// TranslationPost200Response struct for TranslationPost200Response
type TranslationPost200Response struct {
	// 翻訳済みテキスト
	TranslatedText string `json:"translated_text"`
}

type _TranslationPost200Response TranslationPost200Response

// NewTranslationPost200Response instantiates a new TranslationPost200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTranslationPost200Response(translatedText string) *TranslationPost200Response {
	this := TranslationPost200Response{}
	this.TranslatedText = translatedText
	return &this
}

// NewTranslationPost200ResponseWithDefaults instantiates a new TranslationPost200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTranslationPost200ResponseWithDefaults() *TranslationPost200Response {
	this := TranslationPost200Response{}
	return &this
}

// GetTranslatedText returns the TranslatedText field value
func (o *TranslationPost200Response) GetTranslatedText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TranslatedText
}

// GetTranslatedTextOk returns a tuple with the TranslatedText field value
// and a boolean to check if the value has been set.
func (o *TranslationPost200Response) GetTranslatedTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TranslatedText, true
}

// SetTranslatedText sets field value
func (o *TranslationPost200Response) SetTranslatedText(v string) {
	o.TranslatedText = v
}

func (o TranslationPost200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TranslationPost200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["translated_text"] = o.TranslatedText
	return toSerialize, nil
}

func (o *TranslationPost200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"translated_text",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTranslationPost200Response := _TranslationPost200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTranslationPost200Response)

	if err != nil {
		return err
	}

	*o = TranslationPost200Response(varTranslationPost200Response)

	return err
}

type NullableTranslationPost200Response struct {
	value *TranslationPost200Response
	isSet bool
}

func (v NullableTranslationPost200Response) Get() *TranslationPost200Response {
	return v.value
}

func (v *NullableTranslationPost200Response) Set(val *TranslationPost200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableTranslationPost200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableTranslationPost200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTranslationPost200Response(val *TranslationPost200Response) *NullableTranslationPost200Response {
	return &NullableTranslationPost200Response{value: val, isSet: true}
}

func (v NullableTranslationPost200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTranslationPost200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


