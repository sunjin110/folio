/*
folio

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the MediaGet200ResponseMediaInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MediaGet200ResponseMediaInner{}

// MediaGet200ResponseMediaInner struct for MediaGet200ResponseMediaInner
type MediaGet200ResponseMediaInner struct {
	Id string `json:"id"`
	FileType string `json:"file_type"`
	ThumbnailUrl NullableString `json:"thumbnail_url,omitempty"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type _MediaGet200ResponseMediaInner MediaGet200ResponseMediaInner

// NewMediaGet200ResponseMediaInner instantiates a new MediaGet200ResponseMediaInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMediaGet200ResponseMediaInner(id string, fileType string, createdAt time.Time, updatedAt time.Time) *MediaGet200ResponseMediaInner {
	this := MediaGet200ResponseMediaInner{}
	this.Id = id
	this.FileType = fileType
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewMediaGet200ResponseMediaInnerWithDefaults instantiates a new MediaGet200ResponseMediaInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaGet200ResponseMediaInnerWithDefaults() *MediaGet200ResponseMediaInner {
	this := MediaGet200ResponseMediaInner{}
	return &this
}

// GetId returns the Id field value
func (o *MediaGet200ResponseMediaInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MediaGet200ResponseMediaInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MediaGet200ResponseMediaInner) SetId(v string) {
	o.Id = v
}

// GetFileType returns the FileType field value
func (o *MediaGet200ResponseMediaInner) GetFileType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FileType
}

// GetFileTypeOk returns a tuple with the FileType field value
// and a boolean to check if the value has been set.
func (o *MediaGet200ResponseMediaInner) GetFileTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FileType, true
}

// SetFileType sets field value
func (o *MediaGet200ResponseMediaInner) SetFileType(v string) {
	o.FileType = v
}

// GetThumbnailUrl returns the ThumbnailUrl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MediaGet200ResponseMediaInner) GetThumbnailUrl() string {
	if o == nil || IsNil(o.ThumbnailUrl.Get()) {
		var ret string
		return ret
	}
	return *o.ThumbnailUrl.Get()
}

// GetThumbnailUrlOk returns a tuple with the ThumbnailUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MediaGet200ResponseMediaInner) GetThumbnailUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ThumbnailUrl.Get(), o.ThumbnailUrl.IsSet()
}

// HasThumbnailUrl returns a boolean if a field has been set.
func (o *MediaGet200ResponseMediaInner) HasThumbnailUrl() bool {
	if o != nil && o.ThumbnailUrl.IsSet() {
		return true
	}

	return false
}

// SetThumbnailUrl gets a reference to the given NullableString and assigns it to the ThumbnailUrl field.
func (o *MediaGet200ResponseMediaInner) SetThumbnailUrl(v string) {
	o.ThumbnailUrl.Set(&v)
}
// SetThumbnailUrlNil sets the value for ThumbnailUrl to be an explicit nil
func (o *MediaGet200ResponseMediaInner) SetThumbnailUrlNil() {
	o.ThumbnailUrl.Set(nil)
}

// UnsetThumbnailUrl ensures that no value is present for ThumbnailUrl, not even an explicit nil
func (o *MediaGet200ResponseMediaInner) UnsetThumbnailUrl() {
	o.ThumbnailUrl.Unset()
}

// GetCreatedAt returns the CreatedAt field value
func (o *MediaGet200ResponseMediaInner) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *MediaGet200ResponseMediaInner) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *MediaGet200ResponseMediaInner) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *MediaGet200ResponseMediaInner) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *MediaGet200ResponseMediaInner) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *MediaGet200ResponseMediaInner) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o MediaGet200ResponseMediaInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MediaGet200ResponseMediaInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["file_type"] = o.FileType
	if o.ThumbnailUrl.IsSet() {
		toSerialize["thumbnail_url"] = o.ThumbnailUrl.Get()
	}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *MediaGet200ResponseMediaInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"file_type",
		"created_at",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMediaGet200ResponseMediaInner := _MediaGet200ResponseMediaInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMediaGet200ResponseMediaInner)

	if err != nil {
		return err
	}

	*o = MediaGet200ResponseMediaInner(varMediaGet200ResponseMediaInner)

	return err
}

type NullableMediaGet200ResponseMediaInner struct {
	value *MediaGet200ResponseMediaInner
	isSet bool
}

func (v NullableMediaGet200ResponseMediaInner) Get() *MediaGet200ResponseMediaInner {
	return v.value
}

func (v *NullableMediaGet200ResponseMediaInner) Set(val *MediaGet200ResponseMediaInner) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaGet200ResponseMediaInner) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaGet200ResponseMediaInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaGet200ResponseMediaInner(val *MediaGet200ResponseMediaInner) *NullableMediaGet200ResponseMediaInner {
	return &NullableMediaGet200ResponseMediaInner{value: val, isSet: true}
}

func (v NullableMediaGet200ResponseMediaInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaGet200ResponseMediaInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


