/*
folio

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the TasksIdGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TasksIdGet200Response{}

// TasksIdGet200Response struct for TasksIdGet200Response
type TasksIdGet200Response struct {
	Id string `json:"id"`
	Title string `json:"title"`
	Detail string `json:"detail"`
	StartTime NullableTime `json:"start_time,omitempty"`
	DueTime NullableTime `json:"due_time,omitempty"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

type _TasksIdGet200Response TasksIdGet200Response

// NewTasksIdGet200Response instantiates a new TasksIdGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTasksIdGet200Response(id string, title string, detail string, createdAt time.Time, updatedAt time.Time) *TasksIdGet200Response {
	this := TasksIdGet200Response{}
	this.Id = id
	this.Title = title
	this.Detail = detail
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewTasksIdGet200ResponseWithDefaults instantiates a new TasksIdGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTasksIdGet200ResponseWithDefaults() *TasksIdGet200Response {
	this := TasksIdGet200Response{}
	return &this
}

// GetId returns the Id field value
func (o *TasksIdGet200Response) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TasksIdGet200Response) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TasksIdGet200Response) SetId(v string) {
	o.Id = v
}

// GetTitle returns the Title field value
func (o *TasksIdGet200Response) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *TasksIdGet200Response) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *TasksIdGet200Response) SetTitle(v string) {
	o.Title = v
}

// GetDetail returns the Detail field value
func (o *TasksIdGet200Response) GetDetail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Detail
}

// GetDetailOk returns a tuple with the Detail field value
// and a boolean to check if the value has been set.
func (o *TasksIdGet200Response) GetDetailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Detail, true
}

// SetDetail sets field value
func (o *TasksIdGet200Response) SetDetail(v string) {
	o.Detail = v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TasksIdGet200Response) GetStartTime() time.Time {
	if o == nil || IsNil(o.StartTime.Get()) {
		var ret time.Time
		return ret
	}
	return *o.StartTime.Get()
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TasksIdGet200Response) GetStartTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartTime.Get(), o.StartTime.IsSet()
}

// HasStartTime returns a boolean if a field has been set.
func (o *TasksIdGet200Response) HasStartTime() bool {
	if o != nil && o.StartTime.IsSet() {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given NullableTime and assigns it to the StartTime field.
func (o *TasksIdGet200Response) SetStartTime(v time.Time) {
	o.StartTime.Set(&v)
}
// SetStartTimeNil sets the value for StartTime to be an explicit nil
func (o *TasksIdGet200Response) SetStartTimeNil() {
	o.StartTime.Set(nil)
}

// UnsetStartTime ensures that no value is present for StartTime, not even an explicit nil
func (o *TasksIdGet200Response) UnsetStartTime() {
	o.StartTime.Unset()
}

// GetDueTime returns the DueTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TasksIdGet200Response) GetDueTime() time.Time {
	if o == nil || IsNil(o.DueTime.Get()) {
		var ret time.Time
		return ret
	}
	return *o.DueTime.Get()
}

// GetDueTimeOk returns a tuple with the DueTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TasksIdGet200Response) GetDueTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.DueTime.Get(), o.DueTime.IsSet()
}

// HasDueTime returns a boolean if a field has been set.
func (o *TasksIdGet200Response) HasDueTime() bool {
	if o != nil && o.DueTime.IsSet() {
		return true
	}

	return false
}

// SetDueTime gets a reference to the given NullableTime and assigns it to the DueTime field.
func (o *TasksIdGet200Response) SetDueTime(v time.Time) {
	o.DueTime.Set(&v)
}
// SetDueTimeNil sets the value for DueTime to be an explicit nil
func (o *TasksIdGet200Response) SetDueTimeNil() {
	o.DueTime.Set(nil)
}

// UnsetDueTime ensures that no value is present for DueTime, not even an explicit nil
func (o *TasksIdGet200Response) UnsetDueTime() {
	o.DueTime.Unset()
}

// GetCreatedAt returns the CreatedAt field value
func (o *TasksIdGet200Response) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *TasksIdGet200Response) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *TasksIdGet200Response) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *TasksIdGet200Response) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *TasksIdGet200Response) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *TasksIdGet200Response) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o TasksIdGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TasksIdGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["title"] = o.Title
	toSerialize["detail"] = o.Detail
	if o.StartTime.IsSet() {
		toSerialize["start_time"] = o.StartTime.Get()
	}
	if o.DueTime.IsSet() {
		toSerialize["due_time"] = o.DueTime.Get()
	}
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["updated_at"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *TasksIdGet200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"title",
		"detail",
		"created_at",
		"updated_at",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varTasksIdGet200Response := _TasksIdGet200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varTasksIdGet200Response)

	if err != nil {
		return err
	}

	*o = TasksIdGet200Response(varTasksIdGet200Response)

	return err
}

type NullableTasksIdGet200Response struct {
	value *TasksIdGet200Response
	isSet bool
}

func (v NullableTasksIdGet200Response) Get() *TasksIdGet200Response {
	return v.value
}

func (v *NullableTasksIdGet200Response) Set(val *TasksIdGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableTasksIdGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableTasksIdGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTasksIdGet200Response(val *TasksIdGet200Response) *NullableTasksIdGet200Response {
	return &NullableTasksIdGet200Response{value: val, isSet: true}
}

func (v NullableTasksIdGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTasksIdGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


