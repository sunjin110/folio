/*
folio

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MediaGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MediaGet200Response{}

// MediaGet200Response struct for MediaGet200Response
type MediaGet200Response struct {
	TotalCount int32 `json:"total_count"`
	Media []MediaGet200ResponseMediaInner `json:"media"`
}

type _MediaGet200Response MediaGet200Response

// NewMediaGet200Response instantiates a new MediaGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMediaGet200Response(totalCount int32, media []MediaGet200ResponseMediaInner) *MediaGet200Response {
	this := MediaGet200Response{}
	this.TotalCount = totalCount
	this.Media = media
	return &this
}

// NewMediaGet200ResponseWithDefaults instantiates a new MediaGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaGet200ResponseWithDefaults() *MediaGet200Response {
	this := MediaGet200Response{}
	return &this
}

// GetTotalCount returns the TotalCount field value
func (o *MediaGet200Response) GetTotalCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalCount
}

// GetTotalCountOk returns a tuple with the TotalCount field value
// and a boolean to check if the value has been set.
func (o *MediaGet200Response) GetTotalCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalCount, true
}

// SetTotalCount sets field value
func (o *MediaGet200Response) SetTotalCount(v int32) {
	o.TotalCount = v
}

// GetMedia returns the Media field value
func (o *MediaGet200Response) GetMedia() []MediaGet200ResponseMediaInner {
	if o == nil {
		var ret []MediaGet200ResponseMediaInner
		return ret
	}

	return o.Media
}

// GetMediaOk returns a tuple with the Media field value
// and a boolean to check if the value has been set.
func (o *MediaGet200Response) GetMediaOk() ([]MediaGet200ResponseMediaInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Media, true
}

// SetMedia sets field value
func (o *MediaGet200Response) SetMedia(v []MediaGet200ResponseMediaInner) {
	o.Media = v
}

func (o MediaGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MediaGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["total_count"] = o.TotalCount
	toSerialize["media"] = o.Media
	return toSerialize, nil
}

func (o *MediaGet200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"total_count",
		"media",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMediaGet200Response := _MediaGet200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMediaGet200Response)

	if err != nil {
		return err
	}

	*o = MediaGet200Response(varMediaGet200Response)

	return err
}

type NullableMediaGet200Response struct {
	value *MediaGet200Response
	isSet bool
}

func (v NullableMediaGet200Response) Get() *MediaGet200Response {
	return v.value
}

func (v *NullableMediaGet200Response) Set(val *MediaGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaGet200Response(val *MediaGet200Response) *NullableMediaGet200Response {
	return &NullableMediaGet200Response{value: val, isSet: true}
}

func (v NullableMediaGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


