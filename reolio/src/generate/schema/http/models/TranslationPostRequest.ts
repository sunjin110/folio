/* tslint:disable */
/* eslint-disable */
/**
 * folio
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { LanguageCode } from "./LanguageCode";
import {
  LanguageCodeFromJSON,
  LanguageCodeFromJSONTyped,
  LanguageCodeToJSON,
} from "./LanguageCode";

/**
 *
 * @export
 * @interface TranslationPostRequest
 */
export interface TranslationPostRequest {
  /**
   *
   * @type {LanguageCode}
   * @memberof TranslationPostRequest
   */
  sourceLanguageCode: LanguageCode;
  /**
   *
   * @type {LanguageCode}
   * @memberof TranslationPostRequest
   */
  targetLanguageCode: LanguageCode;
  /**
   * 翻訳するテキスト
   * @type {string}
   * @memberof TranslationPostRequest
   */
  text: string;
}

/**
 * Check if a given object implements the TranslationPostRequest interface.
 */
export function instanceOfTranslationPostRequest(value: object): boolean {
  if (!("sourceLanguageCode" in value)) return false;
  if (!("targetLanguageCode" in value)) return false;
  if (!("text" in value)) return false;
  return true;
}

export function TranslationPostRequestFromJSON(
  json: any,
): TranslationPostRequest {
  return TranslationPostRequestFromJSONTyped(json, false);
}

export function TranslationPostRequestFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): TranslationPostRequest {
  if (json == null) {
    return json;
  }
  return {
    sourceLanguageCode: LanguageCodeFromJSON(json["source_language_code"]),
    targetLanguageCode: LanguageCodeFromJSON(json["target_language_code"]),
    text: json["text"],
  };
}

export function TranslationPostRequestToJSON(
  value?: TranslationPostRequest | null,
): any {
  if (value == null) {
    return value;
  }
  return {
    source_language_code: LanguageCodeToJSON(value["sourceLanguageCode"]),
    target_language_code: LanguageCodeToJSON(value["targetLanguageCode"]),
    text: value["text"],
  };
}
