// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * My Project
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0.0
 */

package openapi


import (
	"time"
)



type ArticlesArticleIdGet200Response struct {

	Id string `json:"id"`

	Title string `json:"title"`

	Body string `json:"body"`

	CreatedAt time.Time `json:"created_at"`

	UserId string `json:"user_id"`

	Tags []ArticleTag `json:"tags"`
}

// AssertArticlesArticleIdGet200ResponseRequired checks if the required fields are not zero-ed
func AssertArticlesArticleIdGet200ResponseRequired(obj ArticlesArticleIdGet200Response) error {
	elements := map[string]interface{}{
		"id": obj.Id,
		"title": obj.Title,
		"body": obj.Body,
		"created_at": obj.CreatedAt,
		"user_id": obj.UserId,
		"tags": obj.Tags,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.Tags {
		if err := AssertArticleTagRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertArticlesArticleIdGet200ResponseConstraints checks if the values respects the defined constraints
func AssertArticlesArticleIdGet200ResponseConstraints(obj ArticlesArticleIdGet200Response) error {
	for _, el := range obj.Tags {
		if err := AssertArticleTagConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
