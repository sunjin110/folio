services:
  db:
    image: postgres:16.2
    ports:
      - 127.0.0.1:5441:5432
    environment:
      POSTGRES_USER: golion
      POSTGRES_PASSWORD: golio-password
      POSTGRES_DB: golio
    volumes:
      - golio-db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --username=golion --dbname=golio"]
      interval: 5s
      timeout: 5s
      retries: 5
  test_db:
    image: postgres:16.2
    ports:
      - 127.0.0.1:5442:5432
    environment:
      POSTGRES_USER: golion
      POSTGRES_PASSWORD: golio-password
      POSTGRES_DB: golio
    healthcheck:
      test: ["CMD-SHELL", "pg_isready --username=golion --dbname=golio"]
      interval: 5s
      timeout: 5s
      retries: 5
  s3:
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3:4566
      - HOSTNAME=s3
      - LOCALSTACK_HOST=s3
      - S3_SKIP_SIGNATURE_VALIDATION=0
      - EXTRA_CORS_ALLOWED_ORIGINS="http://localhost:3000"
      - EXTRA_CORS_ALLOWED_HEADERS="Access-Control-Allow-Origin"
      # - EXTRA_CORS_ALLOWED_HEADERS="PUT,GET,DELETE,POST"
  s3-gui-client:
    image: cloudlena/s3manager:latest
    ports:
      - "14566:8080"
    environment:
      - ENDPOINT=s3:4566
      - ACCESS_KEY_ID=test
      - SECRET_ACCESS_KEY=test
      - USE_SSL=false
    depends_on:
      - s3
  s3-init:
    image: amazon/aws-cli
    depends_on:
      - s3
    deploy:
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 0
        window: 120s
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_DEFAULT_REGION=us-east-1
    entrypoint: /bin/sh -c
    volumes:
      - ./local/cors.json:/cors.json
    command: >
     "
      echo 'make bucket...'
      aws --endpoint-url=http://s3:4566 s3api create-bucket --bucket golio-media --region us-east-1

      # CORS設定
      echo 'setting cors'
      aws s3api put-bucket-cors --bucket golio-media --cors-configuration file:///cors.json --endpoint-url=http://s3:4566 --region us-east-1

      aws s3api get-bucket-cors --bucket golio-media --endpoint-url=http://s3:4566
     "
  dynamo:
    image: amazon/dynamodb-local
    ports:
     - "18000:8000"
    command: -jar DynamoDBLocal.jar -sharedDb -inMemory
    healthcheck:
      test: ["CMD-SHELL", "curl http://localhost:8000/shell || exit 1"]
      interval: 1s
      timeout: 10s
      retries: 5
  dynamo-admin: # localのdynamoDBを操作するGUI tool
    image: aaronshaf/dynamodb-admin
    ports:
      - "8001:8001"
    depends_on:
      dynamo:
        condition: service_healthy
    environment:
      DYNAMO_ENDPOINT: http://dynamo:8000
  dynamo-create-table:
    build:
      context: ./local/dynamodb/create_table
      dockerfile: Dockerfile
    environment:
      ENDPOINT_URL: http://dynamo:8000
      AWS_ACCESS_KEY_ID: dummy
      AWS_SECRET_ACCESS_KEY: dummy
      AWS_DEFAULT_REGION: dummy
      AWS_DEFAULT_OUTPUT: text
    depends_on:
      dynamo:
        condition: service_healthy

volumes:
  golio-db:
    driver: local
